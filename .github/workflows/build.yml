name: Main Workflow

on: [push, pull_request]

jobs:
  build:
    name: Build
    strategy:
      matrix:
        rust-version: ["1.59", "stable"]
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v2

      - name: Install Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          profile: minimal
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Build Binary
        run: cargo build

      - name: Run Unit Tests
        run: cargo test

  publish-linux:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        run: cargo build --all --release && mv target/release/discrakt target/release/discrakt_amd64

      - name: Chmod
        run: chmod +x target/release/discrakt_amd64

      - name: Add ARM Target
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Build
        run: cargo build --all --release --target=aarch64-unknown-linux-gnu && mv target/aarch64-unknown-linux-gnu/release/discrakt target/release/discrakt_arm64

      - name: Chmod
        run: chmod +x target/release/discrakt_arm64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/discrakt_arm64
            target/release/discrakt_amd64
            credentials.ini
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-win:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        run: cargo build --all --release && mv target/release/discrakt.exe target/release/discrakt_win64.exe

      - name: Create silent executable
        run: sed -i '1i\#\!\[windows_subsystem\ \=\ \"windows\"\]' src/main.rs

      - name: Build silent executable
        run: cargo build --all --release && mv target/release/discrakt.exe target/release/discrakt_silent_win64.exe

      - name: Release silent executable
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/discrakt_silent_win64.exe
            target/release/discrakt_win64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-mac:
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
          override: true

      - name: Build for mac
        run: cargo build --all --release && mv target/release/discrakt target/release/discrakt_darwin

      - name: Chmod
        run: chmod +x target/release/discrakt_darwin

      - name: Add ARM Target
        run: rustup target add aarch64-apple-darwin

      - name: Build
        run: cargo build --all --release --target=aarch64-apple-darwin && mv target/release/discrakt target/release/discrakt_darwin_arm64

      - name: Chmod
        run: chmod +x target/release/discrakt_darwin_arm64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/discrakt_darwin_arm64
            target/release/discrakt_darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
